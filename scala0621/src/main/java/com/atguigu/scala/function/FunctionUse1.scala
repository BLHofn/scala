package com.atguigu.scala.function

object FunctionUse1 {
    def main(args: Array[String]): Unit = {
        /*
        能省则省的原则：
            1、如果声明了返回值类型 那么方法中的return可以省略
            2、如果可以通过最后一行推断出返回值类型（已经省略return）  那么可以省略方法中的返回值类型
            3、如果一个方法中的逻辑只有一行  那么可以省略花括号{}
            4、如果一个方法的参数列表为空  可以省略小括号（）
            5、如果一个方法明确的声明了返回值类型（除开unit）  那么不可以省略unit
            6、如果一个方法的返回值为unit那么可以省略返回值类型以及等号
            7、如果一个无参数方法在声明的时候没有小括号（） 那么在调用的时候不能使用（）来调用
               但是一个方法在声明的时候有小括号  那么在调用的时候可以使用小括号  也可以不使用
            8、如果只是将函数当成特殊功能使用没有参数的（）可以省略
               如果是将一个函数当作一个整体给一个变量  那么这个变量在调用方法是必须加上小括号  不能省略
            9、当把一个函数当成一个参数传递时，由于参数类型就是一个函数  因此在调用的时候直接传入函数名即可
               也可以传入函数名和下划线  但是下划线一般都是省略不写
         */

//        函数的定义
//        1、无参数  无返回值

        def f1(): Unit ={
            println("xxxx    f1")
}
        f1()
//        2、无参数  有返回值
        def f2(): String ={
            return "f2方法"
        }
        f2()
//        3、有参数  无返回值
        def f3(name:String): Unit ={
            println("f3  "+name)
        }
        f3("hon")
//        4、有参数  有返回值
        def f4(age:Int,name:String): String ={
            return "name:"+name+"  age:"+age
        }
        f4(18,"ti")
    }
}
